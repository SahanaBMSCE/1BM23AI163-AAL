#include <stdio.h>
#include <stdlib.h>

void swap(int *a, int *b) {
    int temp = *a;
    *a = *b;
    *b = temp;
}

int partition(int arr[], int low, int high) {
    int pivot = arr[low];
    int p = low + 1;    
    int q = high;      

    while (p <= q) {
        while (p <= high && arr[p] <= pivot)
            p++;

        while (q >= low && arr[q] > pivot)
            q--;

        if (p < q)
            swap(&arr[p], &arr[q]);
    }
   
    swap(&arr[low], &arr[q]);
    return q;
}

void quickSort(int arr[], int low, int high) {
    if (low < high) {
        int pi = partition(arr, low, high);

        quickSort(arr, low, pi - 1);  
        quickSort(arr, pi + 1, high);
    }
}

void printArray(int arr[], int size) {
	int i;
    for (i = 0; i < size; i++)
        printf("%d ", arr[i]);
    printf("\n");
}

int main() {
    int n, i;
    printf("Enter the size of the array : ");
    scanf("%d", &n);
    int arr[n];
    printf("Enter the array elements : \n");
    for(i = 0; i < n; i++)
		scanf("%d", &arr[i]);
    printf("Original array: ");
    printArray(arr, n);

    quickSort(arr, 0, n - 1);

    printf("Sorted array: ");
    printArray(arr, n);

    return 0;
}           
